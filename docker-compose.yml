version: '3.9'

services:
  mariadb:
    image: docker.io/bitnami/mariadb:latest
    volumes:
      - 'mariadb_data:/bitnami/mariadb'
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - MARIADB_ROOT_USER=harpia
      - MARIADB_ROOT_PASSWORD=harpia
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mariadb/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s
    networks:
      - harpia

  mysql-client:
    container_name: mysql-client
    image: imega/mysql-client:latest
    volumes:
      - './scripts/:/tmp'
    command: >
      sh -c "/tmp/prepare_database.sh"
    networks:
      - harpia

  zookeeper:
    image: docker.io/bitnami/zookeeper:latest
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - harpia

  kafka:
    image: docker.io/bitnami/kafka:latest
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - harpia

  aerspike:
    image: aerospike/aerospike-server:latest
    environment:
      - NAMESPACE=harpia
      - MEM_GB=1
      - STORAGE_DB=1
      - AGENT_LOG_LEVEL=warn
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - harpia

  harp-actions:
    image: theharpia/harp-actions:v1.0.11
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - POD_NAME=harp-actions
      - SERVICE_NAME=harp-actions
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-actions
      - NAMESPACE=harpia
      - LOG_LEVEL=DEBUG
      - DBUSER=harpia
      - DBPASS=harpia
      - DBHOST=mariadb
      - DBPORT=3306
      - DBSCHEMA=harpia_db
      - ENVIRONMENTS_HOST=harp-environments:8081/harp-environments
      - BRIDGE_HOST=harp-bridge:8081/harp-bridge
      - SCENARIOS_HOST=http://harp-scenarios:8081/harp-scenarios/api/v1/scenarios
      - USERS_HOST=harp-users:8081/harp-users
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always
    networks:
      - harpia

  harp-collectors:
    image: theharpia/harp-collectors:v2.0.3
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - POD_NAME=harp-collectors
      - SERVICE_NAME=harp-collectors
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-collectors
      - NAMESPACE=harpia
      - LOG_LEVEL=DEBUG
      - KAFKA_SERVERS=kafka:9092
      - EVENTS_TOPIC=collector-notifications
      - CREATE_NOTIFICATION_ICINGA_TOPIC=create-notifications-icinga
      - CREATE_NOTIFICATION_ZABBIX_TOPIC=create-notifications-zabbix
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always
    networks:
      - harpia

  harp-auto-test:
    image: theharpia/harp-auto-test:v1.0.7
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - POD_NAME=harp-auto-test
      - SERVICE_NAME=harp-auto-test
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-auto-test
      - NAMESPACE=harpia
      - LOG_LEVEL=DEBUG
      - PERIOD_RUN=60
      - COLLECTOR=http://harp-collectors:8081/harp-collectors
      - MAX_SCHEDULER_INSTANCES=2
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always
    networks:
      - harpia

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - harpia
    volumes:
      - "grafana_data:/data/loki"

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - harpia

  grafana:
    image: grafana/grafana:latest
    volumes:
      - "grafana_data:/var/lib/grafana"
    ports:
      - "3000:3000"
    networks:
      - harpia

volumes:
  mariadb_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  aerospike_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local