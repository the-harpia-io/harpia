{
	"info": {
		"_postman_id": "a34a3ac7-047b-4dae-96eb-12561c3e6b91",
		"name": "Howlet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6237630"
	},
	"item": [
		{
			"name": "Customer flow",
			"item": [
				{
					"name": "Create new Org and 1 employee",
					"item": [
						{
							"name": "Register customer profile",
							"item": [
								{
									"name": "Verify new customer profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.new_client).to.eql(true);",
													"    pm.expect(responseJson.register_by).to.eql('device_id');",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"pm.environment.set(\"client_id\", jsonData[\"client_id\"]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, [30000]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"device_id\": \"test postman\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customer-service-host}}/customers/verify",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify existing customer profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.new_client).to.eql(false);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"device_id\": \"test postman\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customer-service-host}}/customers/verify",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get dictionary",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.cities).length.to.be.above(0);",
													"    pm.expect(responseJson.categories).length.to.be.above(0);",
													"    pm.expect(responseJson.categories[0]['sub_categories']).length.to.be.above(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{dictionary-service-host}}/dictionary",
											"host": [
												"{{dictionary-service-host}}"
											],
											"path": [
												"dictionary"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register customer profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.is_registered).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"os_type\": \"ios\",\n  \"city\": \"kyiv\",\n  \"distance\": \"5km\",\n  \"categories\": [1],\n  \"sub_categories\": [1, 2],\n  \"name\": \"Mykola Test\",\n  \"enable_notify\": true,\n  \"enable_geo\": true,\n  \"geo_location\": \"1.2.3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customer-service-host}}/customers/register/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"register",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get customer profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.rate.score).to.equal(0);",
													"    pm.expect(responseJson.rate.amount).to.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{customer-service-host}}/customers/profile/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"profile",
												"{{client_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "New org and owner",
							"item": [
								{
									"name": "Verify new owner profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check owner info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.employee_type).to.eql('new');",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"pm.environment.set(\"employee_id\", jsonData[\"employee_id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone_number\": \"+380989000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{employee-service-host}}/employee/verify",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"employee",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register new org",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check org registration info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.status).to.eql('success');",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"pm.environment.set(\"org_id\", jsonData[\"org_id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"category\": 1,\n  \"sub_categories\": [1, 2],\n  \"country\": \"Ukraine\",\n  \"city\": \"Вінниця\",\n  \"name\": \"Test Org\",\n  \"full_desc\": \"Some long desc for test Org\",\n  \"short_desc\": \"Some short desc for test Org\",\n  \"location\": \"Kiev street 93\",\n  \"social_network\": {\n    \"instagram\": \"http://url_to_instagram\",\n    \"facebook\": \"http://url_to_facebook\"\n  },\n  \"contact_phone\": [\n    \"+380989000000\"\n  ],\n  \"org_owner\": {\n    \"name\": \"Mykola Test\",\n    \"phone_number\": \"+380989000000\"\n  },\n  \"images\": {\n    \"logo\": \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\",\n    \"cover\": [\n      \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\",\n      \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\"\n    ],\n    \"portfolio\": [\n      \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\",\n      \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\"\n    ]\n  },\n  \"services\": [\n    {\n        \"logo\": \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\",\n        \"name\": \"Зачіска\",\n        \"sub_services\": [\n            {\n                \"name\": \"Ламінування\",\n                \"price\": \"100 грн\",\n                \"duration\": 120\n            },\n            {\n                \"name\": \"Фарбування\",\n                \"price\": \"150 грн\",\n                \"duration\": 60\n            }\n        ]\n    },\n    {\n        \"logo\": \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\",\n        \"name\": \"Макіяж\",\n        \"sub_services\": [\n            {\n                \"name\": \"Літній макіяж\",\n                \"price\": \"100 грн\",\n                \"duration\": 120\n            },\n            {\n                \"name\": \"Вечірній макіяж\",\n                \"price\": \"150 грн\",\n                \"duration\": 60\n            }\n        ]\n    }\n  ],\n  \"working_time\": {\n    \"monday\": [\n      {\"start\": \"08:00\", \"end\": \"10:00\"}, \n      {\"start\": \"12:00\", \"end\": \"15:00\"}\n    ],\n    \"tuesday\": [\n      {\"start\": \"08:00\", \"end\": \"19:00\"}\n    ],\n    \"wednesday\": [\n      {\"start\": \"08:00\", \"end\": \"19:00\"}\n    ],\n    \"thursday\": [\n      {\"start\": \"08:00\", \"end\": \"19:00\"}\n    ],\n    \"friday\": [\n      {\"start\": \"08:00\", \"end\": \"19:00\"}\n    ],\n    \"saturday\": [],\n    \"sunday\": []\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{org-service-host}}/organizations/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register new owner",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"os_type\": \"ios\",\n    \"name\": \"Mykola TestOwner\",\n    \"enable_notify\": true,\n    \"enable_geo\": true,\n    \"geo_location\": \"1.2.3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{employee-service-host}}/owner/register/{{org_id}}/{{employee_id}}",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"owner",
												"register",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify existing owner profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check owner info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.employee_type).to.eql('owner');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone_number\": \"+380989000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{employee-service-host}}/employee/verify",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"employee",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Org info",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check owner info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.rate.score).to.equal(0);",
													"    pm.expect(responseJson.rate.amount).to.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/info/{{org_id}}/{{client_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"info",
												"{{org_id}}",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get owner profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{employee_id}}",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"employee",
												"profile",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get owner profile for client",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.is_favorite).to.eql(false);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{employee_id}}/{{client_id}}",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"employee",
												"profile",
												"{{org_id}}",
												"{{employee_id}}",
												"{{client_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "New employee",
							"item": [
								{
									"name": "Register new employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"pm.environment.set(\"emp_id\", jsonData[\"employee_id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Sasha TestEmployee\",\n    \"full_desc\": \"\",\n    \"phone_number\": \"+380989000001\",\n    \"employee_type\": \"employee\",\n    \"images\": {\n        \"logo\": \"http://logo\",\n        \"cover\": [\n            \"http://logo\",\n            \"http://logo2\"\n        ]\n    },\n    \"services\": [\n        {\n            \"logo\": \"http://logo\",\n            \"name\": \"Зачіска\",\n            \"sub_services\": [\n                {\n                    \"name\": \"Ламінування\",\n                    \"price\": \"100 грн\",\n                    \"duration\": 120\n                },\n                {\n                    \"name\": \"Фарбування\",\n                    \"price\": \"150 грн\",\n                    \"duration\": 60\n                }\n            ]\n        },\n        {\n            \"logo\": \"http://logo\",\n            \"name\": \"Макіяж\",\n            \"sub_services\": [\n                {\n                    \"name\": \"Літній макіяж\",\n                    \"price\": \"100 грн\",\n                    \"duration\": 120\n                },\n                {\n                    \"name\": \"Вечірній макіяж\",\n                    \"price\": \"150 грн\",\n                    \"duration\": 60\n                }\n            ]\n        }\n    ],\n    \"working_time\": {\n        \"monday\": [\n            {\"start\": \"08:00\", \"end\": \"10:00\"}, \n            {\"start\": \"12:00\", \"end\": \"15:00\"}\n        ],\n        \"tuesday\": [\n            {\"start\": \"08:00\", \"end\": \"19:00\"}\n        ],\n        \"wednesday\": [\n            {\"start\": \"08:00\", \"end\": \"19:00\"}\n        ],\n        \"thursday\": [\n            {\"start\": \"08:00\", \"end\": \"19:00\"}\n        ],\n        \"friday\": [\n            {\"start\": \"08:00\", \"end\": \"19:00\"}\n        ],\n        \"saturday\": [],\n        \"sunday\": []\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{employee-service-host}}/employee/register/{{org_id}}",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"employee",
												"register",
												"{{org_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify employee profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.employee_type).to.eql('employee');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone_number\": \"+380989000001\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{employee-service-host}}/employee/verify",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"employee",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update employee profile after login",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"os_type\": \"ios\",\n  \"enable_notify\": true,\n  \"enable_geo\": true,\n  \"geo_location\": \"1.2.3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{emp_id}}",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"employee",
												"profile",
												"{{org_id}}",
												"{{emp_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.employee_type).to.eql('employee');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{emp_id}}",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"employee",
												"profile",
												"{{org_id}}",
												"{{emp_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee profile for client",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.is_favorite).to.eql(false);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{emp_id}}/{{client_id}}",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"employee",
												"profile",
												"{{org_id}}",
												"{{emp_id}}",
												"{{client_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Customer Home",
					"item": [
						{
							"name": "Customer categories",
							"item": [
								{
									"name": "Get customer categories",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Orgs info\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.selected_city).to.eql('kyiv');",
													"    pm.expect(responseJson.distance).to.eql('5km');",
													"    pm.expect(responseJson.categories).length.to.be.above(0);",
													"    pm.expect(responseJson.available_cities).length.to.be.above(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{customer-service-host}}/customers/categories/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"categories",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update categories settings",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"city\": \"Вінниця\",\n    \"distance\": \"2km\",\n    \"categories\": [\n        {\n            \"icon\": \"https://playground.harpia.io/icons/dictionary/icType01Beauty.svg\",\n            \"id\": 1,\n            \"name\": \"Краса\",\n            \"selected\": true\n        },\n        {\n            \"icon\": \"https://playground.harpia.io/icons/dictionary/reshot-icon-weightlifting.svg\",\n            \"id\": 2,\n            \"name\": \"Спорт\",\n            \"selected\": false\n        },\n        {\n            \"icon\": \"https://playground.harpia.io/icons/dictionary/reshot-icon-health-insurance.svg\",\n            \"id\": 3,\n            \"name\": \"Здоров`я\",\n            \"selected\": false\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customer-service-host}}/customers/categories/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"categories",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Open customer home",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Orgs info\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.orgs.all).length.to.be.above(0);",
													"    pm.expect(responseJson.scheduled_visits.confirmed).to.have.lengthOf(0);",
													"    pm.expect(responseJson.scheduled_visits.pending).to.have.lengthOf(0);",
													"    pm.expect(responseJson.scheduled_visits.completed).to.have.lengthOf(0);",
													"    pm.expect(responseJson.scheduled_visits.closed).to.have.lengthOf(0);",
													"    pm.expect(responseJson.orgs.recommended).to.have.lengthOf(0);",
													"    pm.expect(responseJson.orgs.recent_regist).to.have.lengthOf(0);",
													"    pm.expect(responseJson.orgs.recent_viewed).to.have.lengthOf(1);",
													"});",
													"",
													"pm.test(\"Check settings info\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.city).to.eql('Вінниця');",
													"    pm.expect(responseJson.distance).to.eql('2km');",
													"    pm.expect(responseJson.sub_categories).length.to.be.above(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"geo_location\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customer-service-host}}/customers/home/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"home",
												"{{client_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Customer sub categories",
							"item": [
								{
									"name": "Update customer sub categories",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sub_categories\": [\n        {\n            \"icon\": \"https://playground.harpia.io/icons/dictionary/icType01Beauty.svg\",\n            \"id\": 1,\n            \"name\": \"Масаж\",\n            \"selected\": true\n        },\n        {\n            \"icon\": \"https://playground.harpia.io/icons/dictionary/icType02Salon.svg\",\n            \"id\": 2,\n            \"name\": \"Зачіска\",\n            \"selected\": true\n        },\n        {\n            \"icon\": \"https://playground.harpia.io/icons/dictionary/icType04Manicure.svg\",\n            \"id\": 3,\n            \"name\": \"Манікюр\",\n            \"selected\": false\n        },\n        {\n            \"icon\": \"https://playground.harpia.io/icons/dictionary/reshot-icon-weight-lifting-person.svg\",\n            \"id\": 4,\n            \"name\": \"Кросфіт\",\n            \"selected\": false\n        },\n        {\n            \"icon\": \"https://playground.harpia.io/icons/dictionary/reshot-icon-ultrasound.svg\",\n            \"id\": 5,\n            \"name\": \"УЗД\",\n            \"selected\": false\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customer-service-host}}/customers/sub-categories/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"sub-categories",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Open customer home after settings update",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Orgs info\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.orgs.all).length.to.be.above(0);",
													"    pm.expect(responseJson.scheduled_visits.confirmed).to.have.lengthOf(0);",
													"    pm.expect(responseJson.scheduled_visits.pending).to.have.lengthOf(0);",
													"    pm.expect(responseJson.scheduled_visits.completed).to.have.lengthOf(0);",
													"    pm.expect(responseJson.orgs.recommended).to.have.lengthOf(0);",
													"    pm.expect(responseJson.orgs.recent_regist).to.have.lengthOf(0);",
													"    pm.expect(responseJson.orgs.recent_viewed).to.have.lengthOf(1);",
													"});",
													"",
													"pm.test(\"Check settings info\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.city).to.eql('Вінниця');",
													"    pm.expect(responseJson.distance).to.eql('2km');",
													"    pm.expect(responseJson.sub_categories).length.to.be.above(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"geo_location\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customer-service-host}}/customers/home/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"home",
												"{{client_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Company",
					"item": [
						{
							"name": "Open company page",
							"item": [
								{
									"name": "Open Company",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check company promo subscription\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.is_promo).to.eql(false);",
													"    pm.expect(responseJson.is_favorite).to.eql(false);",
													"});",
													"",
													"pm.test(\"Check initial company services\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.services).to.have.lengthOf(2)",
													"});",
													"",
													"pm.test(\"Check initial company rate\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.rate.score).to.eql(0);",
													"    pm.expect(responseJson.rate.amount).to.eql(0);",
													"});",
													"",
													"pm.test(\"Check company schedule\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.schedule.holidays).to.have.lengthOf(2)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/info/{{org_id}}/{{client_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"info",
												"{{org_id}}",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Open employee services",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response is OK\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check employee reserved time\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.sub_services).to.have.lengthOf(2)",
													"    pm.expect(responseJson.employee_amount).to.eql(2);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"service_name\": \"Зачіска\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{employee-service-host}}/employee/sub-services/{{org_id}}",
											"host": [
												"{{employee-service-host}}"
											],
											"path": [
												"employee",
												"sub-services",
												"{{org_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get customer profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check if viewed org was added to customer profile\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.viewed_orgs).length.to.be.above(0)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{customer-service-host}}/customers/profile/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"profile",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Open customer home",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Recent viewed Orgs\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.orgs.recent_viewed).length.to.be.above(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"geo_location\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{customer-service-host}}/customers/home/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"home",
												"{{client_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Subscribe to promo",
							"item": [
								{
									"name": "Check if user login",
									"item": [
										{
											"name": "Check if user login",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.is_login).to.eql(false);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{customer-service-host}}/customers/verify/login/{{client_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"verify",
														"login",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Login user",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone_number\": \"+380986627571\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{customer-service-host}}/customers/verify/login/{{client_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"verify",
														"login",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check if user login",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.is_login).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{customer-service-host}}/customers/verify/login/{{client_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"verify",
														"login",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Unlogin user",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone_number\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{customer-service-host}}/customers/verify/login/{{client_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"verify",
														"login",
														"{{client_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Subscribe to Promo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/promo_subscribe/{{org_id}}/{{client_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"promo_subscribe",
												"{{org_id}}",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Org to favorite list",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{customer-service-host}}/customers/favorite/org/{{org_id}}/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"favorite",
												"org",
												"{{org_id}}",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Org info",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Org subscription\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.is_promo).to.eql(true);",
													"    pm.expect(responseJson.is_favorite).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/info/{{org_id}}/{{client_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"info",
												"{{org_id}}",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get subscribed clients to Org",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.promo_clients).to.have.lengthOf(1);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/promo_subscribe_clients/{{org_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"promo_subscribe_clients",
												"{{org_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get favorite list",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Org was added to favorite\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.fave_orgs).to.have.lengthOf(1)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{customer-service-host}}/customers/favorite_list/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"favorite_list",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Unsubscribe from Promo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/promo_subscribe/{{org_id}}/{{client_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"promo_subscribe",
												"{{org_id}}",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Org to favorite list",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{customer-service-host}}/customers/favorite/org/{{org_id}}/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"favorite",
												"org",
												"{{org_id}}",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Org info",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.is_promo).to.eql(false);",
													"    pm.expect(responseJson.is_favorite).to.eql(false);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/info/{{org_id}}/{{client_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"info",
												"{{org_id}}",
												"{{client_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get subscribed clients to Org",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.promo_clients).to.have.lengthOf(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/promo_subscribe_clients/{{org_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"promo_subscribe_clients",
												"{{org_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get favorite list",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Org was removed from favorite\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.fave_orgs).to.have.lengthOf(0)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{customer-service-host}}/customers/favorite_list/{{client_id}}",
											"host": [
												"{{customer-service-host}}"
											],
											"path": [
												"customers",
												"favorite_list",
												"{{client_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Open company services",
							"item": [
								{
									"name": "Get employee list",
									"item": [
										{
											"name": "Get employee list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check amount of employees\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).to.have.lengthOf(2)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{employee-service-host}}/employee/list/{{org_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"list",
														"{{org_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Open employee profile",
									"item": [
										{
											"name": "Open employee profile",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee promo subscription\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.is_favorite).to.eql(false);",
															"});",
															"",
															"pm.test(\"Check initial employee rate\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.rate.score).to.eql(0);",
															"    pm.expect(responseJson.rate.amount).to.eql(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{employee_id}}/{{client_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"profile",
														"{{org_id}}",
														"{{employee_id}}",
														"{{client_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Add employee to favorites",
									"item": [
										{
											"name": "Add Employee to favorite list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{customer-service-host}}/customers/favorite/employee/{{org_id}}/{{employee_id}}/{{client_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"favorite",
														"employee",
														"{{org_id}}",
														"{{employee_id}}",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Employee: check if employee was added to favorite",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"The response has all properties\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.is_favorite).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{employee_id}}/{{client_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"profile",
														"{{org_id}}",
														"{{employee_id}}",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get favorite list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"The response has all properties\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.fave_employee).to.has.lengthOf(1);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{customer-service-host}}/customers/favorite_list/{{client_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"favorite_list",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove Employee from favorite list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{customer-service-host}}/customers/favorite/employee/{{org_id}}/{{employee_id}}/{{client_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"favorite",
														"employee",
														"{{org_id}}",
														"{{employee_id}}",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Employee: check if employee was removed to favorite",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"The response has all properties\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.is_favorite).to.eql(false);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{employee_id}}/{{client_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"profile",
														"{{org_id}}",
														"{{employee_id}}",
														"{{client_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Open employee schedule",
									"item": [
										{
											"name": "Open employee schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response is OK\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee profile\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.employee.name).to.eql('Mykola TestOwner');",
															"});",
															"",
															"pm.test(\"Check employee schedule\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.schedule[0].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[1].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[2].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[3].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[4].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[5].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[6].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[7].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[8].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[9].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[10].reserved).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"selected_date\": \"04-11-2022\",\n    \"service_name\": \"Зачіска\",\n    \"sub_services\": [\"Ламінування\"]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{employee-service-host}}/employee/schedule/{{org_id}}/{{employee_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"schedule",
														"{{org_id}}",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create new order",
									"item": [
										{
											"name": "Create order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"pm.environment.set(\"order_id\", jsonData[\"order_id\"]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// setTimeout(function(){}, [5000]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"service\": \"Зачіска\",\n    \"sub_service\": [\n        {\n            \"name\": \"Ламінування\",\n            \"price\": \"100грн\",\n            \"duration\": 120\n        },\n        {\n            \"name\": \"Фарбування\",\n            \"price\": \"10грн\",\n            \"duration\": 60\n        }\n    ],\n    \"visit_time\": \"04-11-2022 15:00\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{order-service-host}}/orders/{{org_id}}/{{employee_id}}/{{client_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"{{org_id}}",
														"{{employee_id}}",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Open employee schedule Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response is OK\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee profile\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.employee.name).to.eql('Mykola TestOwner');",
															"});",
															"",
															"pm.test(\"Check employee schedule\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.schedule[0].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[1].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[2].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[3].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[4].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[5].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[6].reserved).to.eql(false);",
															"    pm.expect(responseJson.schedule[7].reserved).to.eql(true);",
															"    pm.expect(responseJson.schedule[8].reserved).to.eql(true);",
															"    pm.expect(responseJson.schedule[9].reserved).to.eql(true);",
															"    pm.expect(responseJson.schedule[10].reserved).to.eql(false);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"selected_date\": \"04-11-2022\",\n    \"service_name\": \"Зачіска\",\n    \"sub_services\": [\"Фарбування\"]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{employee-service-host}}/employee/schedule/{{org_id}}/{{employee_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"schedule",
														"{{org_id}}",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Send order",
									"item": [
										{
											"name": "Check if user login",
											"item": [
												{
													"name": "Check if user login",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status test\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Check employee order status\", () => {",
																	"    const responseJson = pm.response.json();",
																	"    pm.expect(responseJson.is_login).to.eql(false);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{customer-service-host}}/customers/verify/login/{{client_id}}",
															"host": [
																"{{customer-service-host}}"
															],
															"path": [
																"customers",
																"verify",
																"login",
																"{{client_id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Login user",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status test\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phone_number\": \"+380986627571\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{customer-service-host}}/customers/verify/login/{{client_id}}",
															"host": [
																"{{customer-service-host}}"
															],
															"path": [
																"customers",
																"verify",
																"login",
																"{{client_id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check if user login",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status test\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Check employee order status\", () => {",
																	"    const responseJson = pm.response.json();",
																	"    pm.expect(responseJson.is_login).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{customer-service-host}}/customers/verify/login/{{client_id}}",
															"host": [
																"{{customer-service-host}}"
															],
															"path": [
																"customers",
																"verify",
																"login",
																"{{client_id}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Send order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order status\", () => {",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.order_status).to.eql('success');",
															"    pm.expect(responseJson.notification_sent).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/send/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"send",
														"{{order_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get client orders",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.pending[0].name).to.eql('Test Org');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/list/customer/{{client_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"list",
														"customer",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get employee orders",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.pending[0].employee_name).to.eql('Mykola TestOwner');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/list/employee/{{employee_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"list",
														"employee",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get employee notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).to.have.lengthOf(1)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{notification-service-host}}/notifications/employee/{{employee_id}}",
													"host": [
														"{{notification-service-host}}"
													],
													"path": [
														"notifications",
														"employee",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Confirm order",
									"item": [
										{
											"name": "Confirm order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order status\", () => {",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.order_status).to.eql('success');",
															"    pm.expect(responseJson.notification_sent).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/confirm/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"confirm",
														"{{order_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get client order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.confirmed[0].name).to.eql('Test Org');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/list/customer/{{client_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"list",
														"customer",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get employee orders",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.confirmed[0].employee_name).to.eql('Mykola TestOwner');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/list/employee/{{employee_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"list",
														"employee",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get order details",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.status).to.eql('confirmed');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"{{order_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get customer notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).to.have.lengthOf(1)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{notification-service-host}}/notifications/customer/{{client_id}}",
													"host": [
														"{{notification-service-host}}"
													],
													"path": [
														"notifications",
														"customer",
														"{{client_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Update order",
									"item": [
										{
											"name": "Get order to change",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order details\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.services[0].sub_services[0].selected).to.eql(true);",
															"    pm.expect(responseJson.services[0].sub_services[1].selected).to.eql(true);",
															"    pm.expect(responseJson.services[0].selected).to.eql(true);",
															"    pm.expect(responseJson.services[1].sub_services[0].selected).to.eql(false);",
															"    pm.expect(responseJson.services[1].sub_services[1].selected).to.eql(false);",
															"    pm.expect(responseJson.services[1].selected).to.eql(false);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/change/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"change",
														"{{order_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order details\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.status).to.eql('new');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"service\": \"Зачіска\",\n  \"sub_service\": [\n    {\n      \"name\": \"Фарбування\",\n      \"price\": \"10грн\",\n      \"duration\": 60\n    }\n  ],\n  \"visit_time\": \"05-10-2022 10:00\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{order-service-host}}/orders/update/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"update",
														"{{order_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Send order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order details\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.order_status).to.eql('success');",
															"    pm.expect(responseJson.notification_sent).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/send/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"send",
														"{{order_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Confirm order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order details\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.order_status).to.eql('success');",
															"    pm.expect(responseJson.notification_sent).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/confirm/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"confirm",
														"{{order_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Complete order",
									"item": [
										{
											"name": "Complete order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order details\", () => {",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.order_status).to.eql('success');",
															"    pm.expect(responseJson.notification_sent).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/complete/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"complete",
														"{{order_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get client order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.completed[0].name).to.eql('Test Org');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/list/customer/{{client_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"list",
														"customer",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get employee orders",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.completed[0].employee_name).to.eql('Mykola TestOwner');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/list/employee/{{employee_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"list",
														"employee",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get customer notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).to.have.lengthOf(3)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{notification-service-host}}/notifications/customer/{{client_id}}",
													"host": [
														"{{notification-service-host}}"
													],
													"path": [
														"notifications",
														"customer",
														"{{client_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Feedback order",
									"item": [
										{
											"name": "Provide feedback about employee",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order details\", () => {",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.order_status).to.eql('success');",
															"    pm.expect(responseJson.notification_sent).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"score\": 5,\n    \"description\": \"Some good feedback about employee\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{order-service-host}}/orders/feedback/customer/{{order_id}}/{{client_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"feedback",
														"customer",
														"{{order_id}}",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Provide feedback about customer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order details\", () => {",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.order_status).to.eql('success');",
															"    pm.expect(responseJson.notification_sent).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"score\": 5,\n    \"description\": \"Some good feedback about customer\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{order-service-host}}/orders/feedback/employee/{{order_id}}/{{employee_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"feedback",
														"employee",
														"{{order_id}}",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get order details",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.status).to.eql('closed');",
															"    pm.expect(responseJson.employee.score).to.eql(5.0);",
															"    pm.expect(responseJson.org.score).to.eql(5.0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"{{order_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get client orders",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.closed[0].name).to.eql('Test Org');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/list/customer/{{client_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"list",
														"customer",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get employee orders",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.closed[0].employee_name).to.eql('Mykola TestOwner');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/list/employee/{{employee_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"list",
														"employee",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check employee profile feedback",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response is OK\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee feedback\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.rate.score).to.eql(5.0);",
															"    pm.expect(responseJson.rate.amount).to.eql(1);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{employee_id}}/{{client_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"profile",
														"{{org_id}}",
														"{{employee_id}}",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check customer profile feedback",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response is OK\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee feedback\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.rate.score).to.eql(5.0);",
															"    pm.expect(responseJson.rate.amount).to.eql(1);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{customer-service-host}}/customers/profile/{{client_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"profile",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check Company Feedback",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Org feedback\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.rate.score).to.eql(5.0);",
															"    pm.expect(responseJson.rate.amount).to.eql(1);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{org-service-host}}/organizations/info/{{org_id}}/{{client_id}}",
													"host": [
														"{{org-service-host}}"
													],
													"path": [
														"organizations",
														"info",
														"{{org_id}}",
														"{{client_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get employee notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).to.have.lengthOf(4)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{notification-service-host}}/notifications/employee/{{employee_id}}",
													"host": [
														"{{notification-service-host}}"
													],
													"path": [
														"notifications",
														"employee",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get customer notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).to.have.lengthOf(4)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{notification-service-host}}/notifications/customer/{{client_id}}",
													"host": [
														"{{notification-service-host}}"
													],
													"path": [
														"notifications",
														"customer",
														"{{client_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Cancel order",
									"item": [
										{
											"name": "Cancel order by customer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order details\", () => {",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.order_status).to.eql('success');",
															"    pm.expect(responseJson.notification_sent).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"cancel_reason\": \"Don`t like it\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{order-service-host}}/orders/cancel/customer/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"cancel",
														"customer",
														"{{order_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel order by employee",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check order details\", () => {",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.order_status).to.eql('success');",
															"    pm.expect(responseJson.notification_sent).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"cancel_reason\": \"Don`t like it\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{order-service-host}}/orders/cancel/employee/{{order_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"cancel",
														"employee",
														"{{order_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get employee notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).to.have.lengthOf(5)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{notification-service-host}}/notifications/employee/{{employee_id}}",
													"host": [
														"{{notification-service-host}}"
													],
													"path": [
														"notifications",
														"employee",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get customer notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check employee order status\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).to.have.lengthOf(5)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{notification-service-host}}/notifications/customer/{{client_id}}",
													"host": [
														"{{notification-service-host}}"
													],
													"path": [
														"notifications",
														"customer",
														"{{client_id}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Employee Flow",
					"item": [
						{
							"name": "Show Org home",
							"item": [
								{
									"name": "Show org home",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response is OK\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.org.name).to.eql('Test Org');",
													"    pm.expect(responseJson.employees).length.to.be.above(1);",
													"});",
													"",
													"",
													"pm.test(\"Check stats\", () => {",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.org.name).to.eql('Test Org');",
													"    pm.expect(responseJson.statistics.completed_visits).to.be.above(0);",
													"    pm.expect(responseJson.statistics.canceled_visits).to.be.above(0);",
													"    pm.expect(responseJson.statistics.open_company_page).to.be.above(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/home/{{org_id}}/{{employee_id}}/1d",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"home",
												"{{org_id}}",
												"{{employee_id}}",
												"1d"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Schedule new visit",
							"item": [
								{
									"name": "Show Schedule",
									"item": [
										{
											"name": "Show Org schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check amount of orders\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.canceled).to.have.lengthOf(1)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/list/org/{{org_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"list",
														"org",
														"{{org_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Show Employee schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check amount of orders\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.canceled).to.have.lengthOf(1)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{order-service-host}}/orders/list/employee/{{employee_id}}",
													"host": [
														"{{order-service-host}}"
													],
													"path": [
														"orders",
														"list",
														"employee",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get customers list",
									"item": [
										{
											"name": "Get list of customers",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check amount of customer\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).length.to.be.above(0)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{customer-service-host}}/customers/list/{{org_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"list",
														"{{org_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Register new customer",
									"item": [
										{
											"name": "Register new customer by phone",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"pm.environment.set(\"temp_client_id\", jsonData[\"client_id\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Mykola Phone\",\n  \"phone_number\": \"+380986627573\",\n  \"notes\": \"Some note about customer\",\n  \"city\": \"Вінниця\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{customer-service-host}}/customers/register/phone",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"register",
														"phone"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get list of customers",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check amount of customer\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).length.to.be.above(2)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{customer-service-host}}/customers/list/{{org_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"list",
														"{{org_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete customer profile",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{customer-service-host}}/customers/profile/{{temp_client_id}}",
													"host": [
														"{{customer-service-host}}"
													],
													"path": [
														"customers",
														"profile",
														"{{temp_client_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Org services",
									"item": [
										{
											"name": "Get list of Org services",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check amount of customer\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).length.to.be.above(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{org-service-host}}/organizations/services/{{org_id}}/{{employee_id}}",
													"host": [
														"{{org-service-host}}"
													],
													"path": [
														"organizations",
														"services",
														"{{org_id}}",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Open employee schedule",
									"item": [
										{
											"name": "Open employee schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response is OK\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Check employee profile\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson.employee.name).to.eql('Mykola TestOwner');",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"selected_date\": \"06-10-2022\",\n    \"service_name\": \"Зачіска\",\n    \"sub_services\": [\"Ламінування\"]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{employee-service-host}}/employee/schedule/{{org_id}}/{{employee_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"schedule",
														"{{org_id}}",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get employee list",
									"item": [
										{
											"name": "Get employee list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check amount of employees\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).to.have.lengthOf(2)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{employee-service-host}}/employee/list/{{org_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"list",
														"{{org_id}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Show employee",
							"item": [
								{
									"name": "Show employee profile",
									"item": [
										{
											"name": "Show employee list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check amount of employees\", () => {",
															"    //parse the response JSON and test three properties",
															"    const responseJson = pm.response.json();",
															"    pm.expect(responseJson).to.have.lengthOf(2)",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{employee-service-host}}/employee/list/{{org_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"list",
														"{{org_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get employee profile",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{employee_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"profile",
														"{{org_id}}",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update employee profile",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Mykola K.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{employee_id}}",
													"host": [
														"{{employee-service-host}}"
													],
													"path": [
														"employee",
														"profile",
														"{{org_id}}",
														"{{employee_id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Add new employee",
									"item": [
										{
											"name": "Get Org schedule and services",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{org-service-host}}/organizations/sub-services/{{org_id}}",
													"host": [
														"{{org-service-host}}"
													],
													"path": [
														"organizations",
														"sub-services",
														"{{org_id}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Create promo",
							"item": [
								{
									"name": "Create Promo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"pm.environment.set(\"promo_id\", jsonData[\"promo_id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Promo\",\n    \"description\": \"Today is a cool promo\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{promo-service-host}}/promo/create/{{org_id}}/{{employee_id}}",
											"host": [
												"{{promo-service-host}}"
											],
											"path": [
												"promo",
												"create",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get promo info",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check info\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{promo-service-host}}/promo/info/{{promo_id}}",
											"host": [
												"{{promo-service-host}}"
											],
											"path": [
												"promo",
												"info",
												"{{promo_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Edit Org Services",
					"item": [
						{
							"name": "Get Org services to edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check amount of services\", () => {",
											"    //parse the response JSON and test three properties",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.services).length.to.be.above(0)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{org-service-host}}/organizations/edit/services/{{org_id}}",
									"host": [
										"{{org-service-host}}"
									],
									"path": [
										"organizations",
										"edit",
										"services",
										"{{org_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Org services",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check update result\", () => {",
											"    //parse the response JSON and test three properties",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.updated).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"services\":[\n        {\n            \"logo\": \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\",\n            \"name\": \"Зачіска\",\n            \"sub_services\": [\n                {\n                    \"duration\": \"120\",\n                    \"name\": \"Ламінування\",\n                    \"price\": \"100 грн\"\n                },\n                {\n                    \"duration\": \"60\",\n                    \"name\": \"Фарбування\",\n                    \"price\": \"150 грн\"\n                }\n            ]\n        },\n        {\n            \"logo\": \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\",\n            \"name\": \"Макіяж\",\n            \"sub_services\": [\n                {\n                    \"duration\": \"120\",\n                    \"name\": \"Літній макіяж\",\n                    \"price\": \"100 грн\"\n                },\n                {\n                    \"duration\": \"60\",\n                    \"name\": \"Вечірній макіяж\",\n                    \"price\": \"200 грн\"\n                }\n            ]\n        }\n    ]\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{org-service-host}}/organizations/edit/services/{{org_id}}",
									"host": [
										"{{org-service-host}}"
									],
									"path": [
										"organizations",
										"edit",
										"services",
										"{{org_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit Org details",
					"item": [
						{
							"name": "Open company",
							"item": [
								{
									"name": "Open Company for employee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check initial company services\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.services).to.have.lengthOf(2)",
													"});",
													"",
													"pm.test(\"Check initial company rate\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.rate.score).to.eql(5);",
													"    pm.expect(responseJson.rate.amount).to.eql(1);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/info/{{org_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"info",
												"{{org_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Edit location",
							"item": [
								{
									"name": "Get location to edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check amount of services\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.location).length.to.be.above(0)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/edit/location/{{org_id}}/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"edit",
												"location",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit location",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check update result\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.updated).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"location\": \"Kiev street 94\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{org-service-host}}/organizations/edit/location/{{org_id}}/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"edit",
												"location",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Edit sub-categories and owner details",
							"item": [
								{
									"name": "Get sub-categories and owners to edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check amount of services\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.sub_categories).length.to.be.above(0)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/edit/sub-categories/{{org_id}}/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"edit",
												"sub-categories",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit sub-categories and owners",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check update result\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.updated).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sub_categories\": [\n    {\n      \"icon\": \"https://logo.svg\",\n      \"id\": 1,\n      \"name\": \"Масаж\",\n      \"selected\": true\n    },\n    {\n      \"icon\": \"https://logo.svg\",\n      \"id\": 2,\n      \"name\": \"Зачіска\",\n      \"selected\": true\n    },\n    {\n      \"icon\": \"https://logo.svg\",\n      \"id\": 3,\n      \"name\": \"Манікюр\",\n      \"selected\": false\n    }\n  ],\n  \"org_owner\": {\n    \"name\": \"Mykola Kondratiuk\",\n    \"phone_number\": \"+380986627571\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{org-service-host}}/organizations/edit/sub-categories/{{org_id}}/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"edit",
												"sub-categories",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Edit description",
							"item": [
								{
									"name": "Get description to edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check amount of services\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.full_desc).length.to.be.above(0)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/edit/description/{{org_id}}/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"edit",
												"description",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit description",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check update result\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.updated).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"full_desc\": \"Long desc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{org-service-host}}/organizations/edit/description/{{org_id}}/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"edit",
												"description",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Edit working time",
							"item": [
								{
									"name": "Get working time to edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check amount of services\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.working_time.friday).length.to.be.above(0)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/edit/working-time/{{org_id}}/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"edit",
												"working-time",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit working time",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check update result\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.updated).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"working_time\": {\n    \"friday\": [\n      {\"start\": \"08:00\", \"end\": \"19:00\"}\n    ],\n    \"monday\": [\n      {\"start\": \"08:00\", \"end\": \"11:00\"},\n      {\"start\": \"12:00\", \"end\": \"18:00\"}\n    ],\n    \"saturday\": [],\n    \"sunday\": [],\n    \"thursday\": [\n      {\"start\": \"08:00\", \"end\": \"19:00\"}\n    ],\n    \"tuesday\": [\n      {\"start\": \"08:00\", \"end\": \"19:00\"}\n    ],\n    \"wednesday\": [\n      {\"start\": \"08:00\", \"end\": \"19:00\"}\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{org-service-host}}/organizations/edit/working-time/{{org_id}}/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"edit",
												"working-time",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Edit images",
							"item": [
								{
									"name": "Get images to edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check amount of services\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.images.cover).length.to.be.above(0)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{org-service-host}}/organizations/edit/images/{{org_id}}/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"edit",
												"images",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit images",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check update result\", () => {",
													"    //parse the response JSON and test three properties",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson.updated).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"images\": {\n        \"cover\": [\n            \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\",\n            \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\"\n        ],\n        \"logo\": \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\",\n        \"portfolio\": [\n            \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\",\n            \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48IS0tISBGb250IEF3ZXNvbWUgUHJvIDYuMi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vuc2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlIChDb21tZXJjaWFsIExpY2Vuc2UpIENvcHlyaWdodCAyMDIyIEZvbnRpY29ucywgSW5jLiAtLT48cGF0aCBkPSJNMjU2IDQ0OGMxNDEuNCAwIDI1Ni05My4xIDI1Ni0yMDhTMzk3LjQgMzIgMjU2IDMyUzAgMTI1LjEgMCAyNDBjMCA0NS4xIDE3LjcgODYuOCA0Ny43IDEyMC45Yy0xLjkgMjQuNS0xMS40IDQ2LjMtMjEuNCA2Mi45Yy01LjUgOS4yLTExLjEgMTYuNi0xNS4yIDIxLjZjLTIuMSAyLjUtMy43IDQuNC00LjkgNS43Yy0uNiAuNi0xIDEuMS0xLjMgMS40bC0uMyAuMyAwIDAgMCAwIDAgMCAwIDBjLTQuNiA0LjYtNS45IDExLjQtMy40IDE3LjRjMi41IDYgOC4zIDkuOSAxNC44IDkuOWMyOC43IDAgNTcuNi04LjkgODEuNi0xOS4zYzIyLjktMTAgNDIuNC0yMS45IDU0LjMtMzAuNmMzMS44IDExLjUgNjcgMTcuOSAxMDQuMSAxNy45ek0yMDIuOSAxNzYuOGM2LjUtMi4yIDEzLjcgLjEgMTcuOSA1LjZMMjU2IDIyOS4zbDM1LjItNDYuOWM0LjEtNS41IDExLjMtNy44IDE3LjktNS42czEwLjkgOC4zIDEwLjkgMTUuMnY5NmMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYyNDBsLTE5LjIgMjUuNmMtMyA0LTcuOCA2LjQtMTIuOCA2LjRzLTkuOC0yLjQtMTIuOC02LjRMMjI0IDI0MHY0OGMwIDguOC03LjIgMTYtMTYgMTZzLTE2LTcuMi0xNi0xNlYxOTJjMC02LjkgNC40LTEzIDEwLjktMTUuMnptMTczLjEgMzhjMCAuMiAwIC40IDAgLjRjLjEgLjEgLjYgLjggMi4yIDEuN2MzLjkgMi4zIDkuNiA0LjEgMTguMyA2LjhsLjYgLjJjNy40IDIuMiAxNy4zIDUuMiAyNS4yIDEwLjJjOS4xIDUuNyAxNy40IDE1LjIgMTcuNiAyOS45Yy4yIDE1LTcuNiAyNi0xNy44IDMyLjNjLTkuNSA1LjktMjAuOSA3LjktMzAuNyA3LjZjLTEyLjItLjQtMjMuNy00LjQtMzIuNi03LjRsMCAwIDAgMGMtMS40LS41LTIuNy0uOS00LTEuNGMtOC40LTIuOC0xMi45LTExLjktMTAuMS0yMC4yczExLjktMTIuOSAyMC4yLTEwLjFjMS43IC42IDMuMyAxLjEgNC45IDEuNmwwIDAgMCAwYzkuMSAzLjEgMTUuNiA1LjMgMjIuNiA1LjVjNS4zIC4yIDEwLTEgMTIuOC0yLjhjMS4yLS44IDEuOC0xLjUgMi4xLTJjLjItLjQgLjYtMS4yIC42LTIuN2wwLS4yYzAtLjcgMC0xLjQtMi43LTMuMWMtMy44LTIuNC05LjYtNC4zLTE4LTYuOWwtMS4yLS40Yy03LjItMi4yLTE2LjctNS0yNC4zLTkuNmMtOS01LjQtMTcuNy0xNC43LTE3LjctMjkuNGMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGMxMCAuMiAxOS43IDIuMyAyNy45IDQuNGM4LjUgMi4zIDEzLjYgMTEgMTEuMyAxOS42cy0xMSAxMy42LTE5LjYgMTEuM2MtNy4zLTEuOS0xNC4xLTMuMy0yMC4xLTMuNGMtNC45LS4xLTkuOCAxLjEtMTIuOSAyLjljLTEuNCAuOC0yLjEgMS42LTIuNCAyYy0uMiAuMy0uNCAuOC0uNCAxLjl6bS0yNzIgMGMwIC4yIDAgLjQgMCAuNGMuMSAuMSAuNiAuOCAyLjIgMS43YzMuOSAyLjMgOS42IDQuMSAxOC4zIDYuOGwuNiAuMmM3LjQgMi4yIDE3LjMgNS4yIDI1LjIgMTAuMmM5LjEgNS43IDE3LjQgMTUuMiAxNy42IDI5LjljLjIgMTUtNy42IDI2LTE3LjggMzIuM2MtOS41IDUuOS0yMC45IDcuOS0zMC43IDcuNmMtMTIuMy0uNC0yNC4yLTQuNS0zMy4yLTcuNmwwIDAgMCAwYy0xLjMtLjQtMi41LS44LTMuNi0xLjJjLTguNC0yLjgtMTIuOS0xMS45LTEwLjEtMjAuMnMxMS45LTEyLjkgMjAuMi0xMC4xYzEuNCAuNSAyLjcgLjkgNCAxLjRsMCAwIDAgMCAwIDBjOS41IDMuMiAxNi41IDUuNiAyMy43IDUuOGM1LjMgLjIgMTAtMSAxMi44LTIuOGMxLjItLjggMS44LTEuNSAyLjEtMmMuMi0uNCAuNi0xLjIgLjYtMi43bDAtLjJjMC0uNyAwLTEuNC0yLjctMy4xYy0zLjgtMi40LTkuNi00LjMtMTgtNi45bC0xLjItLjQgMCAwYy03LjItMi4yLTE2LjctNS0yNC4zLTkuNkM4MC44IDIzOSA3Mi4xIDIyOS43IDcyIDIxNWMtLjEtMTUuMiA4LjYtMjUuNyAxOC41LTMxLjZjOS40LTUuNSAyMC41LTcuNSAyOS43LTcuNGM5LjUgLjEgMjIuMiAyLjEgMzEuMSA0LjRjOC41IDIuMyAxMy42IDExIDExLjMgMTkuNnMtMTEgMTMuNi0xOS42IDExLjNjLTYuNi0xLjgtMTYuOC0zLjMtMjMuMy0zLjRjLTQuOS0uMS05LjggMS4xLTEyLjkgMi45Yy0xLjQgLjgtMi4xIDEuNi0yLjQgMmMtLjIgLjMtLjQgLjgtLjQgMS45eiIvPjwvc3ZnPg==\"\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{org-service-host}}/organizations/edit/images/{{org_id}}/{{employee_id}}",
											"host": [
												"{{org-service-host}}"
											],
											"path": [
												"organizations",
												"edit",
												"images",
												"{{org_id}}",
												"{{employee_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Clean Data",
					"item": [
						{
							"name": "Delete order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service\": \"Перукарські послуги\",\n    \"sub_service\": [\n        {\n            \"name\": \"Догляд за волоссям\",\n            \"price\": \"100$\",\n            \"duration\": 120\n        },\n        {\n            \"name\": \"Фарбування\",\n            \"price\": \"10$\",\n            \"duration\": 60\n        }\n    ],\n    \"visit_time\": \"06-10-2022 19:00\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{order-service-host}}/orders/{{order_id}}",
									"host": [
										"{{order-service-host}}"
									],
									"path": [
										"orders",
										"{{order_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete org promotions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{promo-service-host}}/promo/org/{{org_id}}",
									"host": [
										"{{promo-service-host}}"
									],
									"path": [
										"promo",
										"org",
										"{{org_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete customer notifications",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{notification-service-host}}/notifications/customer/{{client_id}}",
									"host": [
										"{{notification-service-host}}"
									],
									"path": [
										"notifications",
										"customer",
										"{{client_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete employee notifications",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{notification-service-host}}/notifications/employee/{{employee_id}}",
									"host": [
										"{{notification-service-host}}"
									],
									"path": [
										"notifications",
										"employee",
										"{{employee_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete employee profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{emp_id}}",
									"host": [
										"{{employee-service-host}}"
									],
									"path": [
										"employee",
										"profile",
										"{{org_id}}",
										"{{emp_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete owner profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{employee-service-host}}/employee/profile/{{org_id}}/{{employee_id}}",
									"host": [
										"{{employee-service-host}}"
									],
									"path": [
										"employee",
										"profile",
										"{{org_id}}",
										"{{employee_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Org",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{org-service-host}}/organizations/{{org_id}}",
									"host": [
										"{{org-service-host}}"
									],
									"path": [
										"organizations",
										"{{org_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{customer-service-host}}/customers/profile/{{client_id}}",
									"host": [
										"{{customer-service-host}}"
									],
									"path": [
										"customers",
										"profile",
										"{{client_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "customer-service-host",
			"value": "https://playground.harpia.io/customer-service"
		},
		{
			"key": "dictionary-service-host",
			"value": "https://playground.harpia.io/dictionary-service"
		},
		{
			"key": "org-service-host",
			"value": "https://playground.harpia.io/org-service"
		},
		{
			"key": "employee-service-host",
			"value": "https://playground.harpia.io/employee-service"
		},
		{
			"key": "order-service-host",
			"value": "https://playground.harpia.io/order-service"
		},
		{
			"key": "notification-service-host",
			"value": "https://playground.harpia.io/notification-service"
		},
		{
			"key": "assets-service-host",
			"value": "https://playground.harpia.io/assets-service"
		},
		{
			"key": "promo-service-host",
			"value": "https://playground.harpia.io/promo-service"
		},
		{
			"key": "notify-service-host",
			"value": "https://playground.harpia.io/notify-service"
		}
	]
}