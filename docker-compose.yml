version: '3.9'

services:
  mariadb:
    image: docker.io/bitnami/mariadb:latest
    volumes:
      - 'mariadb_data:/bitnami/mariadb'
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - MARIADB_ROOT_USER=harpia
      - MARIADB_ROOT_PASSWORD=harpia
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mariadb/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s

  mariadb-exporter:
    image: quay.io/prometheus/mysqld-exporter
    command:
     - -collect.info_schema.tablestats
    environment:
      - DATA_SOURCE_NAME=exporter:exporter@(mariadb:3306)/
    links:
      - mariadb
    depends_on:
      - mariadb

  mysql-client:
    container_name: mysql-client
    image: imega/mysql-client:latest
    volumes:
      - './scripts/:/tmp'
    command: >
        sh -c "/tmp/prepare_database.sh client_db_template.sql 
        {% if ${ENV}=='prod' %}
        && /tmp/prepare_database.sh prod_db_template.sql
        {% endif %}
        "

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.6.3
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s

  kafka:
    image: docker.io/bitnami/kafka:3.2.3
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s

  kafka-lag-exporter:
    image: docker.io/seglo/kafka-lag-exporter:0.7.3
    volumes:
      - './configs/kafkalag:/opt/docker/conf'
    environment:
      - KAFKA_LAG_EXPORTER_CLUSTERS.0.name=kafka
      - KAFKA_LAG_EXPORTER_CLUSTERS.0.bootstrap-brokers=kafka:9092
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s

  aerospike:
    image: aerospike/aerospike-server:6.1.0.2
    ports:
      - "3000:3000"
      - "3002:3002"
    environment:
      - NAMESPACE=harpia
      - MEM_GB=1
      - STORAGE_DB=1
      - AGENT_LOG_LEVEL=warn
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s

  harp-actions:
    image: theharpia/harp-actions:v1.0.11
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - POD_NAME=harp-actions
      - SERVICE_NAME=harp-actions
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-actions
      - NAMESPACE=harpia
      - LOG_LEVEL=DEBUG
      - DBUSER=harpia
      - DBPASS=harpia
      - DBHOST=mariadb
      - DBPORT=3306
      - DBSCHEMA=harpia_db
      - ENVIRONMENTS_HOST=harp-environments:8081/harp-environments
      - BRIDGE_HOST=harp-bridge:8081/harp-bridge
      - SCENARIOS_HOST=http://harp-scenarios:8081/harp-scenarios/api/v1/scenarios
      - USERS_HOST=harp-users:8081/harp-users
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-collectors:
    image: theharpia/harp-collectors:v2.0.3
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - POD_NAME=harp-collectors
      - SERVICE_NAME=harp-collectors
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-collectors
      - NAMESPACE=harpia
      - LOG_LEVEL=DEBUG
      - KAFKA_SERVERS=kafka:9092
      - EVENTS_TOPIC=collector-notifications
      - CREATE_NOTIFICATION_ICINGA_TOPIC=create-notifications-icinga
      - CREATE_NOTIFICATION_ZABBIX_TOPIC=create-notifications-zabbix
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-auto-test:
    image: theharpia/harp-auto-test:v1.0.7
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - POD_NAME=harp-auto-test
      - SERVICE_NAME=harp-auto-test
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-auto-test
      - NAMESPACE=harpia
      - LOG_LEVEL=DEBUG
      - PERIOD_RUN=60
      - COLLECTOR=http://harp-collectors:8081/harp-collectors
      - MAX_SCHEDULER_INSTANCES=2
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-environments:
    image: theharpia/harp-environments:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - DATABASE_SERVER=mariadb
      - DATABASE_USER=harpia
      - DATABASE_PSWD=harpia
      - DATABASE_SCHEMA=harpia_db

      - POD_NAME=harp-environments
      - SERVICE_NAME=harp-environments
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-environments
      - NAMESPACE=harpia

      - KAFKA_SERVERS=kafka:9092
      - ENVIRONMENT_UPDATE_TOPIC=environment-update
      - USERS_HOST=http://harp-users:8081/harp-users/api/v1/users
      - SCENARIOS_HOST=http://harp-scenarios:8081/harp-scenarios/api/v1/scenarios
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-daemon:
    image: theharpia/harp-daemon:v1.0.4
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - DATABASE_SERVER=mariadb
      - DATABASE_USER=harpia
      - DATABASE_PSWD=harpia
      - DATABASE_SCHEMA=harpia_db

      - AEROSPIKE_HOST=aerospike
      - AEROSPIKE_PORT=3000
      - AEROSPIKE_NAMESPACE=harpia

      - POD_NAME=harp-daemon
      - SERVICE_NAME=harp-daemon
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-daemon
      - NAMESPACE=harpia

      - REQUESTS_CACHE_EXPIRE_SECONDS=300
      - SCENARIOS_HOST=http://harp-scenarios:8081/harp-scenarios/api/v1/scenarios
      - ENVIRONMENTS_HOST=http://harp-environments:8081/harp-environments/api/v1/environments
      - NOTIFICATION_SERVICE_SMS=http://harp-notifications-sms:8081/harp-notifications-sms/api/v1/notifications/sms
      - NOTIFICATION_SERVICE_VOICE=http://harp-notifications-voice:8081/harp-notifications-voice/api/v1/notifications/voice
      - NOTIFICATION_SERVICE_WHATSAPP=http://harp-notifications-whatsapp:8081/harp-notifications-whatsapp/api/v1/notifications/whatsapp
      - LICENSE_SERVICE=http://harp-licenses:8081/harp-licenses/api/v1/licenses/verify

      - KAFKA_SERVERS=kafka:9092
      - KAFKA_CONSUMER_THREADS=5
      - COLLETOR_NOTIFICATIONS_TOPIC=collector-notifications-decorated
      - RESOLVE_NOTIFICATIONS_TOPIC=resolve-notifications
      - ENV_DELETION_TOPIC=environment-update

      - SMTP_ACTIVE=false
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=465

      - JIRA_ACTIVE=false
      - JIRA_HOST=''
      - JIRA_USER=''
      - JIRA_PASS=''
      - JIRA_TIMEOUT=15
      - JIRA_TEMP_FILES=''

      - SKYPE_ACTIVE=false
      - SKYPE_USER=notifications@harpia.io
      - SKYPE_PASS=eXM+X5EcO+
      - SKYPE_TEMP_FILES=/tmp

      - TELEGRAM_ACTIVE=false
      - TELEGRAM_TOKEN="714661308:AAFFTL0ausKQ9ptl4Z5LpPAw4Qhj7dOIi6Q"
      - TELEGRAM_TEMP_FILES=/tmp

      - TEAMS_ACTIVE=false

      - PAGERDUTY_ACTIVE=false
      - PAGERDUTY_ENDPOINT=https://events.pagerduty.com/v2/enqueue

      - SMS_ACTIVE=false
      - VOICE_ACTIVE=false
      - CHECK_ALERT_STATE_FLAPPING=false
      - DEEP_REPORTING=true
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-users:
    image: theharpia/harp-users:v1.0.1
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - DATABASE_SERVER=mariadb
      - DATABASE_USER=harpia
      - DATABASE_PSWD=harpia
      - DATABASE_SCHEMA=harpia_db

      - AEROSPIKE_HOST=aerospike
      - AEROSPIKE_PORT=3000
      - AEROSPIKE_NAMESPACE=harpia

      - POD_NAME=harp-users
      - SERVICE_NAME=harp-users
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-users
      - NAMESPACE=harpia

      - KAFKA_SERVERS=kafka:9092
      - ENVIRONMENT_UPDATE_TOPIC=environment-update
      - ENVIRONMENTS_HOST=http://harp-environments:8081/harp-environments
      - TOKEN_EXPIRE_HOURS=720
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=465
      - SMTP_USER=harp.notifications@gmail.com
      - SMTP_PASS=lekhsbkjyzbdrqer
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-licenses:
    image: theharpia/harp-licenses:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - DATABASE_SERVER=mariadb
      - DATABASE_USER=harpia
      - DATABASE_PSWD=harpia
      - DATABASE_SCHEMA=harpia_db

      - POD_NAME=harp-licenses
      - SERVICE_NAME=harp-licenses
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-licenses
      - NAMESPACE=harpia
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-aggregator:
    image: theharpia/harp-aggregator:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - DBHOST=mariadb
      - DBUSER=harpia
      - DBPASS=harpia
      - DBSCHEMA=harpia_db

      - POD_NAME=harp-aggregator
      - SERVICE_NAME=harp-aggregator
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-aggregator
      - NAMESPACE=harpia

      - ENVIRONMENTS_HOST=harp-environments:8081/harp-environments
      - AEROSPIKE_HOST=aerospike
      - AEROSPIKE_PORT=3000
      - AEROSPIKE_NAMESPACE=harpia
      - UPDATE_AEROSPIKE_SECONDS=10
      - UPDATE_ENVIRONMENTS_SECONDS=60
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-bridge:
    image: theharpia/harp-bridge:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=harp-bridge
      - SERVICE_NAME=harp-bridge
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-bridge
      - NAMESPACE=harpia

      - AEROSPIKE_HOST=aerospike
      - AEROSPIKE_PORT=3000
      - AEROSPIKE_NAMESPACE=harpia

      - CLIENT_NOTIFICATION_PERIOD_SECONDS=20
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-scenarios:
    image: theharpia/harp-scenarios:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=harp-scenarios
      - SERVICE_NAME=harp-scenarios
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-scenarios
      - NAMESPACE=harpia

      - DATABASE_SERVER=mariadb
      - DATABASE_USER=harpia
      - DATABASE_PSWD=harpia
      - DATABASE_SCHEMA=harpia_db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-clientevents:
    image: theharpia/harp-clientevents:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=harp-clientevents
      - SERVICE_NAME=harp-clientevents
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-clientevents
      - NAMESPACE=harpia
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-alert-decorator:
    image: theharpia/harp-alert-decorator:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=harp-alert-decorator
      - SERVICE_NAME=harp-alert-decorator
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-alert-decorator
      - NAMESPACE=harpia

      - KAFKA_SERVERS=kafka:9092
      - NOTIFICATIONS_TOPIC=collector-notifications
      - NOTIFICATIONS_DECORATED_TOPIC=collector-notifications-decorated
      - SCENARIOS_HOST=http://harp-scenarios:8081/harp-scenarios/api/v1/scenarios
      - ENVIRONMENTS_HOST=http://harp-environments:8081/harp-environments/api/v1/environments
      - INTEGRATIONS_HOST=http://harp-integrations:8081/harp-integrations/api/v1/integrations
      - REQUESTS_CACHE_EXPIRE_SECONDS=60
      - UNASSIGNED_SCENARIO_ID=1
      - UNASSIGNED_ENV_ID=1
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-ui:
    image: theharpia/harp-ui:v1.1.0
    environment:
      - POD_NAME=harp-ui
      - DOMAIN=https://playground.harpia.io
      - GRAFANA_REPORTS=https://playground.harpia.io/grafana
      - NAMESPACE=harpia
      - SHOW_SIDE_PANEL=true
      - DEMO_EMAIL=harp-demo@harpia.io
      - DEMO_PASSWORD=Harp-p1@yground
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-integrations:
    image: theharpia/harp-integrations:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=harp-integrations
      - SERVICE_NAME=harp-integrations
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-integrations
      - NAMESPACE=harpia

      - DATABASE_SERVER=mariadb
      - DATABASE_USER=harpia
      - DATABASE_PSWD=harpia
      - DATABASE_SCHEMA=harpia_db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-bots:
    image: theharpia/harp-bots:v1.0.3
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=harp-bots
      - SERVICE_NAME=harp-bots
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-bots
      - NAMESPACE=harpia

      - DATABASE_SERVER=mariadb
      - DATABASE_USER=harpia
      - DATABASE_PSWD=harpia
      - DATABASE_SCHEMA=harpia_db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-notifications-voice:
    image: theharpia/harp-notifications-voice:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=harp-notifications-voice
      - SERVICE_NAME=harp-notifications-voice
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-notifications-voice
      - NAMESPACE=harpia

      - BOTS_SERVICE=http://harp-bots:8081/harp-bots/api/v1/bots
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-notifications-sms:
    image: theharpia/harp-notifications-sms:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=harp-notifications-sms
      - SERVICE_NAME=harp-notifications-sms
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-notifications-sms
      - NAMESPACE=harpia

      - BOTS_SERVICE=http://harp-bots:8081/harp-bots/api/v1/bots
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-notifications-gmail:
    image: theharpia/harp-notifications-gmail:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=harp-notifications-gmail
      - SERVICE_NAME=harp-notifications-gmail
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-notifications-gmail
      - NAMESPACE=harpia

      - BOTS_SERVICE=http://harp-bots:8081/harp-bots/api/v1/bots
      - GMAIL_HOST=smtp.gmail.com
      - GMAIL_PORT=465
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  harp-filters:
    image: theharpia/harp-filters:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=harp-filters
      - SERVICE_NAME=harp-filters
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/harp-filters
      - NAMESPACE=harpia

      - DATABASE_SERVER=mariadb
      - DATABASE_USER=harpia
      - DATABASE_PSWD=harpia
      - DATABASE_SCHEMA=harpia_db

      - KAFKA_SERVERS=kafka:9092
      - NOTIFICATIONS_DECORATED_TOPIC=collector-notifications-decorated
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - "grafana_data:/data/loki"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  grafana:
    image: grafana/grafana:latest
    volumes:
      - "grafana_data:/var/lib/grafana"
      - ./configs/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./configs/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=harpia_2022
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_DATABASE_TYPE=mysql
      - GF_DATABASE_HOST=mariadb
      - GF_DATABASE_NAME=grafana
      - GF_DATABASE_USER=grafana
      - GF_DATABASE_PASSWORD=grafana
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_ALERTING_ENABLED=false
      - GF_UNIFIED_ALERTING_ENABLED=true
      - GF_INSTALL_PLUGINS=natel-discrete-panel,grafana-piechart-panel,flant-statusmap-panel,yesoreyeram-boomtable-panel
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
      resources:
        limits:
          cpus: "1"
          memory: 512M
    pull_policy: always

  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:latest
    depends_on:
      - "victoriametrics"
    volumes:
      -  vmagentdata_data:/vmagentdata
      -  ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--remoteWrite.url=http://victoriametrics:8428/api/v1/write"
    restart: always

  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:latest
#    ports:
#      - 8428:8428
#      - 8089:8089
#      - 8089:8089/udp
#      - 2003:2003
#      - 2003:2003/udp
#      - 4242:4242
    volumes:
      - victoriametrics_data:/storage
    command:
      - "--storageDataPath=/storage"
      - "--graphiteListenAddr=:2003"
      - "--opentsdbListenAddr=:4242"
      - "--httpListenAddr=:8428"
      - "--influxListenAddr=:8089"
    restart: always

  nginx:
      restart: unless-stopped
      image: nginx:latest
      ports:
          - "80:80"
          - "443:443"
      volumes:
          - ./configs/nginx:/etc/nginx
          - /etc/letsencrypt/archive/harpia.io:/tmp
          - ./configs/assets:/var/www/html
      deploy:
        restart_policy:
          condition: on-failure
          delay: 5s
      pull_policy: always

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.22.0
    container_name: blackbox
    restart: unless-stopped
    command:
      - "--config.file=/etc/blackbox/blackbox.yml"
    volumes:
      - ./configs/blackbox/blackbox.yml:/etc/blackbox/blackbox.yml
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s

  customer-service:
    image: theharpia/customer-service:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=customer-service
      - SERVICE_NAME=customer-service
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/customer-service
      - NAMESPACE=harpia

      - AEROSPIKE_HOST=aerospike
      - ORG_SERVICE=http://org-service:8081/org-service
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  dictionary-service:
    image: theharpia/dictionary-service:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=dictionary-service
      - SERVICE_NAME=dictionary-service
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/dictionary-service
      - NAMESPACE=harpia

      - AEROSPIKE_HOST=aerospike
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always

  org-service:
    image: theharpia/org-service:v1.0.0
    environment:
      - LOKI_SERVER=loki
      - LOKI_PORT=3100
      - LOG_LEVEL=DEBUG

      - POD_NAME=org-service
      - SERVICE_NAME=org-service
      - SERVICE_NAMESPACE=harpia
      - URL_PREFIX=/org-service
      - NAMESPACE=harpia

      - AEROSPIKE_HOST=aerospike
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    pull_policy: always


volumes:
  mariadb_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  aerospike_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  vmagentdata_data:
    driver: local
  victoriametrics_data:
    driver: local